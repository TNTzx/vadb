generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model Artist {
  id           Int             @id @default(autoincrement())
  name         String
  metadata     ArtistMetadata?
  availability Availability
  rights Right[]

  addedAt DateTime
  updatedAt DateTime @updatedAt
}


model ArtistMetadata {
  id       Int    @id @default(autoincrement())
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId Int    @unique

  artistAliases ArtistAlias[]
  description   String
  notes         String
  genre         String
  songs         Song[]
  socials       Social[]
}

model ArtistAlias {
  id Int @id @default(autoincrement())

  artistMetadata ArtistMetadata @relation(fields: [artistId], references: [artistId])
  artistId       Int

  name String
}

model Song {
  id Int @id @default(autoincrement())

  artistMetadata ArtistMetadata @relation(fields: [artistId], references: [artistId])
  artistId       Int

  title       String
  songAliases SongAlias[]
  audioPath   String
}

model SongAlias {
  id Int @id @default(autoincrement())

  song   Song @relation(fields: [songId], references: [id])
  songId Int

  name String
}

model Social {
  id Int @id @default(autoincrement())

  artistMetadata ArtistMetadata @relation(fields: [artistId], references: [artistId])
  artistId       Int

  link String
}



enum Availability {
  ALLOWED
  DISALLOWED
  VARIES
  UNKNOWN
}


model Right {
  id Int @id @default(autoincrement())

  artist Artist @relation(fields: [artistId], references: [id])
  artistId Int

  identifier String
  isAllowed Boolean
}



model Token {
  id    Int    @id @default(autoincrement())
  token String
}
